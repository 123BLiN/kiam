// Code generated by protoc-gen-go. DO NOT EDIT.
// source: service.proto

package kiam

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type GetPodCredentialsRequest struct {
	Ip                   string   `protobuf:"bytes,1,opt,name=ip,proto3" json:"ip,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetPodCredentialsRequest) Reset()         { *m = GetPodCredentialsRequest{} }
func (m *GetPodCredentialsRequest) String() string { return proto.CompactTextString(m) }
func (*GetPodCredentialsRequest) ProtoMessage()    {}
func (*GetPodCredentialsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_57bd609ba35047df, []int{0}
}
func (m *GetPodCredentialsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetPodCredentialsRequest.Unmarshal(m, b)
}
func (m *GetPodCredentialsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetPodCredentialsRequest.Marshal(b, m, deterministic)
}
func (dst *GetPodCredentialsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPodCredentialsRequest.Merge(dst, src)
}
func (m *GetPodCredentialsRequest) XXX_Size() int {
	return xxx_messageInfo_GetPodCredentialsRequest.Size(m)
}
func (m *GetPodCredentialsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPodCredentialsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetPodCredentialsRequest proto.InternalMessageInfo

func (m *GetPodCredentialsRequest) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

type GetPodRoleRequest struct {
	Ip                   string   `protobuf:"bytes,1,opt,name=ip,proto3" json:"ip,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetPodRoleRequest) Reset()         { *m = GetPodRoleRequest{} }
func (m *GetPodRoleRequest) String() string { return proto.CompactTextString(m) }
func (*GetPodRoleRequest) ProtoMessage()    {}
func (*GetPodRoleRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_57bd609ba35047df, []int{1}
}
func (m *GetPodRoleRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetPodRoleRequest.Unmarshal(m, b)
}
func (m *GetPodRoleRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetPodRoleRequest.Marshal(b, m, deterministic)
}
func (dst *GetPodRoleRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPodRoleRequest.Merge(dst, src)
}
func (m *GetPodRoleRequest) XXX_Size() int {
	return xxx_messageInfo_GetPodRoleRequest.Size(m)
}
func (m *GetPodRoleRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPodRoleRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetPodRoleRequest proto.InternalMessageInfo

func (m *GetPodRoleRequest) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

type Role struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Role) Reset()         { *m = Role{} }
func (m *Role) String() string { return proto.CompactTextString(m) }
func (*Role) ProtoMessage()    {}
func (*Role) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_57bd609ba35047df, []int{2}
}
func (m *Role) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Role.Unmarshal(m, b)
}
func (m *Role) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Role.Marshal(b, m, deterministic)
}
func (dst *Role) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Role.Merge(dst, src)
}
func (m *Role) XXX_Size() int {
	return xxx_messageInfo_Role.Size(m)
}
func (m *Role) XXX_DiscardUnknown() {
	xxx_messageInfo_Role.DiscardUnknown(m)
}

var xxx_messageInfo_Role proto.InternalMessageInfo

func (m *Role) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type GetRoleCredentialsRequest struct {
	Role                 *Role    `protobuf:"bytes,1,opt,name=role,proto3" json:"role,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetRoleCredentialsRequest) Reset()         { *m = GetRoleCredentialsRequest{} }
func (m *GetRoleCredentialsRequest) String() string { return proto.CompactTextString(m) }
func (*GetRoleCredentialsRequest) ProtoMessage()    {}
func (*GetRoleCredentialsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_57bd609ba35047df, []int{3}
}
func (m *GetRoleCredentialsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRoleCredentialsRequest.Unmarshal(m, b)
}
func (m *GetRoleCredentialsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRoleCredentialsRequest.Marshal(b, m, deterministic)
}
func (dst *GetRoleCredentialsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRoleCredentialsRequest.Merge(dst, src)
}
func (m *GetRoleCredentialsRequest) XXX_Size() int {
	return xxx_messageInfo_GetRoleCredentialsRequest.Size(m)
}
func (m *GetRoleCredentialsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRoleCredentialsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetRoleCredentialsRequest proto.InternalMessageInfo

func (m *GetRoleCredentialsRequest) GetRole() *Role {
	if m != nil {
		return m.Role
	}
	return nil
}

type Credentials struct {
	Code                 string   `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Type                 string   `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	AccessKeyId          string   `protobuf:"bytes,3,opt,name=access_key_id,json=accessKeyId,proto3" json:"access_key_id,omitempty"`
	SecretAccessKey      string   `protobuf:"bytes,4,opt,name=secret_access_key,json=secretAccessKey,proto3" json:"secret_access_key,omitempty"`
	Token                string   `protobuf:"bytes,5,opt,name=token,proto3" json:"token,omitempty"`
	Expiration           string   `protobuf:"bytes,6,opt,name=expiration,proto3" json:"expiration,omitempty"`
	LastUpdated          string   `protobuf:"bytes,7,opt,name=last_updated,json=lastUpdated,proto3" json:"last_updated,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Credentials) Reset()         { *m = Credentials{} }
func (m *Credentials) String() string { return proto.CompactTextString(m) }
func (*Credentials) ProtoMessage()    {}
func (*Credentials) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_57bd609ba35047df, []int{4}
}
func (m *Credentials) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Credentials.Unmarshal(m, b)
}
func (m *Credentials) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Credentials.Marshal(b, m, deterministic)
}
func (dst *Credentials) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Credentials.Merge(dst, src)
}
func (m *Credentials) XXX_Size() int {
	return xxx_messageInfo_Credentials.Size(m)
}
func (m *Credentials) XXX_DiscardUnknown() {
	xxx_messageInfo_Credentials.DiscardUnknown(m)
}

var xxx_messageInfo_Credentials proto.InternalMessageInfo

func (m *Credentials) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *Credentials) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Credentials) GetAccessKeyId() string {
	if m != nil {
		return m.AccessKeyId
	}
	return ""
}

func (m *Credentials) GetSecretAccessKey() string {
	if m != nil {
		return m.SecretAccessKey
	}
	return ""
}

func (m *Credentials) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *Credentials) GetExpiration() string {
	if m != nil {
		return m.Expiration
	}
	return ""
}

func (m *Credentials) GetLastUpdated() string {
	if m != nil {
		return m.LastUpdated
	}
	return ""
}

type GetHealthRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetHealthRequest) Reset()         { *m = GetHealthRequest{} }
func (m *GetHealthRequest) String() string { return proto.CompactTextString(m) }
func (*GetHealthRequest) ProtoMessage()    {}
func (*GetHealthRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_57bd609ba35047df, []int{5}
}
func (m *GetHealthRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetHealthRequest.Unmarshal(m, b)
}
func (m *GetHealthRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetHealthRequest.Marshal(b, m, deterministic)
}
func (dst *GetHealthRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetHealthRequest.Merge(dst, src)
}
func (m *GetHealthRequest) XXX_Size() int {
	return xxx_messageInfo_GetHealthRequest.Size(m)
}
func (m *GetHealthRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetHealthRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetHealthRequest proto.InternalMessageInfo

type HealthStatus struct {
	Message              string   `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HealthStatus) Reset()         { *m = HealthStatus{} }
func (m *HealthStatus) String() string { return proto.CompactTextString(m) }
func (*HealthStatus) ProtoMessage()    {}
func (*HealthStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_57bd609ba35047df, []int{6}
}
func (m *HealthStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HealthStatus.Unmarshal(m, b)
}
func (m *HealthStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HealthStatus.Marshal(b, m, deterministic)
}
func (dst *HealthStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HealthStatus.Merge(dst, src)
}
func (m *HealthStatus) XXX_Size() int {
	return xxx_messageInfo_HealthStatus.Size(m)
}
func (m *HealthStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_HealthStatus.DiscardUnknown(m)
}

var xxx_messageInfo_HealthStatus proto.InternalMessageInfo

func (m *HealthStatus) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type IsAllowedAssumeRoleRequest struct {
	Ip                   string   `protobuf:"bytes,1,opt,name=ip,proto3" json:"ip,omitempty"`
	Role                 *Role    `protobuf:"bytes,2,opt,name=role,proto3" json:"role,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IsAllowedAssumeRoleRequest) Reset()         { *m = IsAllowedAssumeRoleRequest{} }
func (m *IsAllowedAssumeRoleRequest) String() string { return proto.CompactTextString(m) }
func (*IsAllowedAssumeRoleRequest) ProtoMessage()    {}
func (*IsAllowedAssumeRoleRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_57bd609ba35047df, []int{7}
}
func (m *IsAllowedAssumeRoleRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IsAllowedAssumeRoleRequest.Unmarshal(m, b)
}
func (m *IsAllowedAssumeRoleRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IsAllowedAssumeRoleRequest.Marshal(b, m, deterministic)
}
func (dst *IsAllowedAssumeRoleRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IsAllowedAssumeRoleRequest.Merge(dst, src)
}
func (m *IsAllowedAssumeRoleRequest) XXX_Size() int {
	return xxx_messageInfo_IsAllowedAssumeRoleRequest.Size(m)
}
func (m *IsAllowedAssumeRoleRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_IsAllowedAssumeRoleRequest.DiscardUnknown(m)
}

var xxx_messageInfo_IsAllowedAssumeRoleRequest proto.InternalMessageInfo

func (m *IsAllowedAssumeRoleRequest) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

func (m *IsAllowedAssumeRoleRequest) GetRole() *Role {
	if m != nil {
		return m.Role
	}
	return nil
}

type IsAllowedAssumeRoleResponse struct {
	Decision             *Decision `protobuf:"bytes,1,opt,name=decision,proto3" json:"decision,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *IsAllowedAssumeRoleResponse) Reset()         { *m = IsAllowedAssumeRoleResponse{} }
func (m *IsAllowedAssumeRoleResponse) String() string { return proto.CompactTextString(m) }
func (*IsAllowedAssumeRoleResponse) ProtoMessage()    {}
func (*IsAllowedAssumeRoleResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_57bd609ba35047df, []int{8}
}
func (m *IsAllowedAssumeRoleResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IsAllowedAssumeRoleResponse.Unmarshal(m, b)
}
func (m *IsAllowedAssumeRoleResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IsAllowedAssumeRoleResponse.Marshal(b, m, deterministic)
}
func (dst *IsAllowedAssumeRoleResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IsAllowedAssumeRoleResponse.Merge(dst, src)
}
func (m *IsAllowedAssumeRoleResponse) XXX_Size() int {
	return xxx_messageInfo_IsAllowedAssumeRoleResponse.Size(m)
}
func (m *IsAllowedAssumeRoleResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_IsAllowedAssumeRoleResponse.DiscardUnknown(m)
}

var xxx_messageInfo_IsAllowedAssumeRoleResponse proto.InternalMessageInfo

func (m *IsAllowedAssumeRoleResponse) GetDecision() *Decision {
	if m != nil {
		return m.Decision
	}
	return nil
}

type Decision struct {
	IsAllowed            bool     `protobuf:"varint,1,opt,name=is_allowed,json=isAllowed,proto3" json:"is_allowed,omitempty"`
	Explanation          string   `protobuf:"bytes,2,opt,name=explanation,proto3" json:"explanation,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Decision) Reset()         { *m = Decision{} }
func (m *Decision) String() string { return proto.CompactTextString(m) }
func (*Decision) ProtoMessage()    {}
func (*Decision) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_57bd609ba35047df, []int{9}
}
func (m *Decision) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Decision.Unmarshal(m, b)
}
func (m *Decision) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Decision.Marshal(b, m, deterministic)
}
func (dst *Decision) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Decision.Merge(dst, src)
}
func (m *Decision) XXX_Size() int {
	return xxx_messageInfo_Decision.Size(m)
}
func (m *Decision) XXX_DiscardUnknown() {
	xxx_messageInfo_Decision.DiscardUnknown(m)
}

var xxx_messageInfo_Decision proto.InternalMessageInfo

func (m *Decision) GetIsAllowed() bool {
	if m != nil {
		return m.IsAllowed
	}
	return false
}

func (m *Decision) GetExplanation() string {
	if m != nil {
		return m.Explanation
	}
	return ""
}

func init() {
	proto.RegisterType((*GetPodCredentialsRequest)(nil), "kiam.GetPodCredentialsRequest")
	proto.RegisterType((*GetPodRoleRequest)(nil), "kiam.GetPodRoleRequest")
	proto.RegisterType((*Role)(nil), "kiam.Role")
	proto.RegisterType((*GetRoleCredentialsRequest)(nil), "kiam.GetRoleCredentialsRequest")
	proto.RegisterType((*Credentials)(nil), "kiam.Credentials")
	proto.RegisterType((*GetHealthRequest)(nil), "kiam.GetHealthRequest")
	proto.RegisterType((*HealthStatus)(nil), "kiam.HealthStatus")
	proto.RegisterType((*IsAllowedAssumeRoleRequest)(nil), "kiam.IsAllowedAssumeRoleRequest")
	proto.RegisterType((*IsAllowedAssumeRoleResponse)(nil), "kiam.IsAllowedAssumeRoleResponse")
	proto.RegisterType((*Decision)(nil), "kiam.Decision")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// KiamServiceClient is the client API for KiamService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type KiamServiceClient interface {
	GetPodRole(ctx context.Context, in *GetPodRoleRequest, opts ...grpc.CallOption) (*Role, error)
	GetPodCredentials(ctx context.Context, in *GetPodCredentialsRequest, opts ...grpc.CallOption) (*Credentials, error)
	GetHealth(ctx context.Context, in *GetHealthRequest, opts ...grpc.CallOption) (*HealthStatus, error)
	// DEPRECATE BELOW
	GetRoleCredentials(ctx context.Context, in *GetRoleCredentialsRequest, opts ...grpc.CallOption) (*Credentials, error)
	IsAllowedAssumeRole(ctx context.Context, in *IsAllowedAssumeRoleRequest, opts ...grpc.CallOption) (*IsAllowedAssumeRoleResponse, error)
}

type kiamServiceClient struct {
	cc *grpc.ClientConn
}

func NewKiamServiceClient(cc *grpc.ClientConn) KiamServiceClient {
	return &kiamServiceClient{cc}
}

func (c *kiamServiceClient) GetPodRole(ctx context.Context, in *GetPodRoleRequest, opts ...grpc.CallOption) (*Role, error) {
	out := new(Role)
	err := c.cc.Invoke(ctx, "/kiam.KiamService/GetPodRole", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *kiamServiceClient) GetPodCredentials(ctx context.Context, in *GetPodCredentialsRequest, opts ...grpc.CallOption) (*Credentials, error) {
	out := new(Credentials)
	err := c.cc.Invoke(ctx, "/kiam.KiamService/GetPodCredentials", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *kiamServiceClient) GetHealth(ctx context.Context, in *GetHealthRequest, opts ...grpc.CallOption) (*HealthStatus, error) {
	out := new(HealthStatus)
	err := c.cc.Invoke(ctx, "/kiam.KiamService/GetHealth", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *kiamServiceClient) GetRoleCredentials(ctx context.Context, in *GetRoleCredentialsRequest, opts ...grpc.CallOption) (*Credentials, error) {
	out := new(Credentials)
	err := c.cc.Invoke(ctx, "/kiam.KiamService/GetRoleCredentials", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *kiamServiceClient) IsAllowedAssumeRole(ctx context.Context, in *IsAllowedAssumeRoleRequest, opts ...grpc.CallOption) (*IsAllowedAssumeRoleResponse, error) {
	out := new(IsAllowedAssumeRoleResponse)
	err := c.cc.Invoke(ctx, "/kiam.KiamService/IsAllowedAssumeRole", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// KiamServiceServer is the server API for KiamService service.
type KiamServiceServer interface {
	GetPodRole(context.Context, *GetPodRoleRequest) (*Role, error)
	GetPodCredentials(context.Context, *GetPodCredentialsRequest) (*Credentials, error)
	GetHealth(context.Context, *GetHealthRequest) (*HealthStatus, error)
	// DEPRECATE BELOW
	GetRoleCredentials(context.Context, *GetRoleCredentialsRequest) (*Credentials, error)
	IsAllowedAssumeRole(context.Context, *IsAllowedAssumeRoleRequest) (*IsAllowedAssumeRoleResponse, error)
}

func RegisterKiamServiceServer(s *grpc.Server, srv KiamServiceServer) {
	s.RegisterService(&_KiamService_serviceDesc, srv)
}

func _KiamService_GetPodRole_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPodRoleRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KiamServiceServer).GetPodRole(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kiam.KiamService/GetPodRole",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KiamServiceServer).GetPodRole(ctx, req.(*GetPodRoleRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _KiamService_GetPodCredentials_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPodCredentialsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KiamServiceServer).GetPodCredentials(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kiam.KiamService/GetPodCredentials",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KiamServiceServer).GetPodCredentials(ctx, req.(*GetPodCredentialsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _KiamService_GetHealth_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetHealthRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KiamServiceServer).GetHealth(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kiam.KiamService/GetHealth",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KiamServiceServer).GetHealth(ctx, req.(*GetHealthRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _KiamService_GetRoleCredentials_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRoleCredentialsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KiamServiceServer).GetRoleCredentials(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kiam.KiamService/GetRoleCredentials",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KiamServiceServer).GetRoleCredentials(ctx, req.(*GetRoleCredentialsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _KiamService_IsAllowedAssumeRole_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IsAllowedAssumeRoleRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KiamServiceServer).IsAllowedAssumeRole(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kiam.KiamService/IsAllowedAssumeRole",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KiamServiceServer).IsAllowedAssumeRole(ctx, req.(*IsAllowedAssumeRoleRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _KiamService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "kiam.KiamService",
	HandlerType: (*KiamServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetPodRole",
			Handler:    _KiamService_GetPodRole_Handler,
		},
		{
			MethodName: "GetPodCredentials",
			Handler:    _KiamService_GetPodCredentials_Handler,
		},
		{
			MethodName: "GetHealth",
			Handler:    _KiamService_GetHealth_Handler,
		},
		{
			MethodName: "GetRoleCredentials",
			Handler:    _KiamService_GetRoleCredentials_Handler,
		},
		{
			MethodName: "IsAllowedAssumeRole",
			Handler:    _KiamService_IsAllowedAssumeRole_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "service.proto",
}

func init() { proto.RegisterFile("service.proto", fileDescriptor_service_57bd609ba35047df) }

var fileDescriptor_service_57bd609ba35047df = []byte{
	// 494 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x54, 0x4f, 0x6f, 0xd3, 0x4e,
	0x10, 0x4d, 0xf2, 0x4b, 0xdb, 0x64, 0xdc, 0xf6, 0x47, 0x06, 0x04, 0xc6, 0x88, 0x90, 0x2e, 0x97,
	0x2a, 0x87, 0x1c, 0xda, 0x13, 0xe2, 0x14, 0x81, 0x94, 0x86, 0x70, 0x40, 0xae, 0xb8, 0x21, 0x59,
	0x8b, 0x3d, 0x82, 0x55, 0x6c, 0xaf, 0xf1, 0x6e, 0xa0, 0xf9, 0xb2, 0x7c, 0x07, 0xbe, 0x01, 0xb2,
	0x27, 0x76, 0x8d, 0xe2, 0xf4, 0xb6, 0x7e, 0x6f, 0xfe, 0xed, 0xbc, 0xb7, 0x86, 0x33, 0x43, 0xf9,
	0x4f, 0x15, 0xd2, 0x2c, 0xcb, 0xb5, 0xd5, 0xd8, 0x5f, 0x2b, 0x99, 0x88, 0x29, 0xb8, 0x0b, 0xb2,
	0x9f, 0x74, 0xf4, 0x2e, 0xa7, 0x88, 0x52, 0xab, 0x64, 0x6c, 0x7c, 0xfa, 0xb1, 0x21, 0x63, 0xf1,
	0x1c, 0x7a, 0x2a, 0x73, 0xbb, 0x93, 0xee, 0xe5, 0xd0, 0xef, 0xa9, 0x4c, 0xbc, 0x86, 0x11, 0xc7,
	0xfa, 0x3a, 0xa6, 0x43, 0x41, 0x1e, 0xf4, 0x0b, 0x1a, 0x11, 0xfa, 0xa9, 0x4c, 0x68, 0xc7, 0x94,
	0x67, 0xf1, 0x16, 0x9e, 0x2f, 0xc8, 0x16, 0x74, 0x4b, 0xb7, 0x31, 0xf4, 0x73, 0x1d, 0x73, 0x82,
	0x73, 0x05, 0xb3, 0x62, 0xbc, 0x59, 0xd9, 0xa9, 0xc4, 0xc5, 0xef, 0x2e, 0x38, 0x8d, 0xb4, 0xa2,
	0x41, 0xa8, 0xa3, 0xba, 0x41, 0x71, 0x2e, 0x30, 0xbb, 0xcd, 0xc8, 0xed, 0x31, 0x56, 0x9c, 0x51,
	0xc0, 0x99, 0x0c, 0x43, 0x32, 0x26, 0x58, 0xd3, 0x36, 0x50, 0x91, 0xfb, 0x5f, 0x49, 0x3a, 0x0c,
	0xae, 0x68, 0xbb, 0x8c, 0x70, 0x0a, 0x23, 0x43, 0x61, 0x4e, 0x36, 0xb8, 0x0f, 0x75, 0xfb, 0x65,
	0xdc, 0xff, 0x4c, 0xcc, 0xab, 0x68, 0x7c, 0x02, 0x47, 0x56, 0xaf, 0x29, 0x75, 0x8f, 0x4a, 0x9e,
	0x3f, 0x70, 0x0c, 0x40, 0x77, 0x99, 0xca, 0xa5, 0x55, 0x3a, 0x75, 0x8f, 0x4b, 0xaa, 0x81, 0xe0,
	0x05, 0x9c, 0xc6, 0xd2, 0xd8, 0x60, 0x93, 0x45, 0xd2, 0x52, 0xe4, 0x9e, 0xf0, 0x10, 0x05, 0xf6,
	0x99, 0x21, 0x81, 0xf0, 0x68, 0x41, 0xf6, 0x86, 0x64, 0x6c, 0xbf, 0xef, 0x96, 0x22, 0x2e, 0xe1,
	0x94, 0x81, 0x5b, 0x2b, 0xed, 0xc6, 0xa0, 0x0b, 0x27, 0x09, 0x19, 0x23, 0xbf, 0x55, 0xf7, 0xae,
	0x3e, 0xc5, 0x47, 0xf0, 0x96, 0x66, 0x1e, 0xc7, 0xfa, 0x17, 0x45, 0x73, 0x63, 0x36, 0x09, 0x3d,
	0xa0, 0x52, 0xbd, 0xec, 0xde, 0x81, 0x65, 0x2f, 0xe1, 0x45, 0x6b, 0x35, 0x93, 0xe9, 0xd4, 0x10,
	0x4e, 0x61, 0x10, 0x51, 0xa8, 0x4c, 0x71, 0x57, 0xd6, 0xeb, 0x9c, 0x4b, 0xbc, 0xdf, 0xa1, 0x7e,
	0xcd, 0x8b, 0x15, 0x0c, 0x2a, 0x14, 0x5f, 0x02, 0x28, 0x13, 0x48, 0xae, 0x5b, 0x66, 0x0e, 0xfc,
	0xa1, 0xaa, 0x1a, 0xe1, 0x04, 0x1c, 0xba, 0xcb, 0x62, 0x99, 0xf2, 0x16, 0x59, 0xc5, 0x26, 0x74,
	0xf5, 0xa7, 0x07, 0xce, 0x4a, 0xc9, 0xe4, 0x96, 0xad, 0x8c, 0xd7, 0x00, 0xf7, 0x96, 0xc4, 0x67,
	0x3c, 0xc4, 0x9e, 0x49, 0xbd, 0xc6, 0x05, 0x45, 0x07, 0x6f, 0x2a, 0x1f, 0x37, 0xed, 0x34, 0x6e,
	0xe6, 0xee, 0xdb, 0xd3, 0x1b, 0x31, 0xdf, 0x60, 0x44, 0x07, 0xdf, 0xc0, 0xb0, 0x96, 0x0c, 0x9f,
	0xd6, 0x15, 0xfe, 0xd1, 0xd0, 0x43, 0xc6, 0x9b, 0x3a, 0x8a, 0x0e, 0x7e, 0x00, 0xdc, 0x7f, 0x0b,
	0xf8, 0xaa, 0xae, 0xd1, 0xfe, 0x4a, 0xda, 0xc7, 0xf8, 0x02, 0x8f, 0x5b, 0xd4, 0xc2, 0x09, 0xc7,
	0x1e, 0xb6, 0x85, 0x77, 0xf1, 0x40, 0x04, 0x4b, 0x2d, 0x3a, 0x5f, 0x8f, 0xcb, 0xff, 0xc5, 0xf5,
	0xdf, 0x00, 0x00, 0x00, 0xff, 0xff, 0xdf, 0x1e, 0xdc, 0xdd, 0x40, 0x04, 0x00, 0x00,
}
